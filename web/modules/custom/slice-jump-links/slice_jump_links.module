<?php

/**
 * @file
 * Contains slice_jump_links.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\slice_jump_links\Exception\JumpLinkException;

/**
 * Implements hook_help().
 */
function slice_jump_links_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the slice_jump_links module.
    case 'help.page.slice_jump_links':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Add jump links from slices') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function slice_jump_links_theme() {
  return [
    'slice_jump_links' => [
      'template' => 'slice_jump_links',
      'render element' => 'children',
      'variables' => [
        'list' => [],
      ]
    ],
  ];
}

/**
 * Implements hook_preprocess_node().
 * Adds a jump link to a slice if the jump link label fields have been added.
 */
function slice_jump_links_preprocess_node(array &$variables) {
  if ($variables['view_mode'] == 'full') {
    try {
      $node = $variables['elements']['#node'];
      $variables['jump_link'] = \Drupal::Service('jump_link.factory.entity')->fetch($node);
    } catch (JumpLinkException $e) {
      // This is a non-jump linkable node
    }
  }
}

/**
 * Implements hook_preprocess_paragraph().
 * Adds a jump link to a slice if the anchor or jump link label fields have been added.
 */
function slice_jump_links_preprocess_paragraph(array &$variables) {
  try {
    $slice = $variables['elements']['#paragraph'];
    $variables['jump_link'] = \Drupal::Service('jump_link.factory.entity')->fetch($slice);
  } catch (JumpLinkException $e) {
    // This is a non-jump linkable slice
  }
}